// This code was written by Srijon Chakraborty
// Main source code link on http://srijon.softallybd.com/kruskals-algorithm-in-cc/
// All my source codes are available on http://srijon.softallybd.com
// C/C++ program Simple Kruskals algorithm using structure C/C++
// This Code was written in Turbo C So if you are using latest IDE then please remove "conio.h" and its fuctions

#include <stdio.h>
#include <stdlib.h>
#include <conio.h>

typedef struct Edge
{
    int src, dest, cost;
};

typedef struct Graph
{
    int V, E;
    Edge* edge;
};

typedef struct subset
{
    int parent,rnk;
};
Graph * create_Graph(int V, int E)
{
    Graph* graph = new Graph();
    graph->V = V;
    graph->E = E;
    graph->edge = (Edge*) malloc( E * sizeof( Edge ) );
    return graph;
}
//finding the root of a node
int find_r(subset subsets[], int i)
{

    if (subsets[i].parent == i) return subsets[i].parent;

    return find_r(subsets, subsets[i].parent);
}
void Union(subset subsets[], int x, int y)
{
    int xroot = find_r(subsets, x);
    int yroot = find_r(subsets, y);

    if (subsets[xroot].rnk < subsets[yroot].rnk)
        subsets[xroot].parent = yroot;
    else if (subsets[xroot].rnk > subsets[yroot].rnk)
        subsets[yroot].parent = xroot;

    else
    {
        subsets[yroot].parent = xroot;
        subsets[xroot].rnk++;
    }
}

//func for qsort
int fucn_sort(const void* a, const void* b)
{
    Edge* a1 = (Edge*)a;
    Edge* b1 = (Edge*)b;
    return a1->cost > b1->cost;
}

void KruskalMST(Graph* graph)
{
    int V = graph->V;
    Edge result[V];
    int e = 0;
    int i = 0;

    qsort(graph->edge, graph->E, sizeof(*graph->edge), fucn_sort);
    subset *subsets = (subset*) malloc( V * sizeof(subset) );
    for (int v = 0; v < V; ++v)
    {
        subsets[v].parent = v;
        subsets[v].rnk = 0;
    }
    while (e < V - 1)
    {

        Edge next_edge = graph->edge[i++];

        int x = find_r(subsets, next_edge.src);
        int y = find_r(subsets, next_edge.dest);
        if (x != y)
        {
            result[e++] = next_edge;
            Union(subsets, x, y);
        }

    }
    freopen("output.txt", "w", stdout);
    printf("\t\t::Kruskal MST GRAPH::\n");
    printf("\t\t---------------------\n\n");
    int MST=0;
    for (i = 0; i < e; ++i)
    {
        MST=MST+result[i].cost;
        printf(" \t\t%d <--> %d == %d\n", result[i].src, result[i].dest,result[i].cost);
    }
    printf("\n\t\tMST ::%d",MST);
    return;
}

int main()
{
    freopen("input.txt", "r", stdin);

//create input.txt file in same directory where your *.cpp file is saved.
    int V, E;
    scanf ("%d %d", &V, &E);
    Graph* graph = create_Graph(V, E);
    for (int i = 0; i < E; ++i)
        scanf ("%d %d %d", &graph->edge[i].src, &graph->edge[i].dest, &graph->edge[i].cost);
    KruskalMST(graph);
    getch();
    return 0;
}

/*
input:::

6 9
0 1 8
0 2 15
0 3 25
1 3 15
2 3 34
2 1 22
4 1 16
5 1 16
4 2 6
*/
